USE cpsc_304;
SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS RecipeHasTag;
DROP TABLE IF EXISTS RecipeHasIngredient;
DROP TABLE IF EXISTS RecipeHasEquipment;
DROP TABLE IF EXISTS RecipeHasTechnique;
DROP TABLE IF EXISTS UsrFavouriteRecipe;
DROP TABLE IF EXISTS UsrHasIngredient;
DROP TABLE IF EXISTS Course;
DROP TABLE IF EXISTS Picture;
DROP TABLE IF EXISTS Collections;
DROP TABLE IF EXISTS Equipment;
DROP TABLE IF EXISTS Administrator;
DROP TABLE IF EXISTS Comment;
DROP TABLE IF EXISTS Message;
DROP TABLE IF EXISTS Tag;
DROP TABLE IF EXISTS Ingredient;
DROP TABLE IF EXISTS Recipe;
DROP TABLE IF EXISTS Usr;
DROP TABLE IF EXISTS Technique;
DROP TABLE IF EXISTS UsrRateRecipe;

SET FOREIGN_KEY_CHECKS = 1;

CREATE TABLE Equipment (
	name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE Technique (
	name VARCHAR(255) PRIMARY KEY,
	difficulty INT
);

CREATE TABLE Usr (
       UUID INT PRIMARY KEY,
       birthday DATE,
       email VARCHAR(255) NOT NULL,
       username VARCHAR(255) NOT NULL,
       name VARCHAR(255) NOT NULL,
       password VARCHAR(255) NOT NULL,
       city VARCHAR(255) ,
       postalCode VARCHAR(255) ,
       UNIQUE (email),
       UNIQUE (username)
);


CREATE TABLE Administrator (
	UUID INT PRIMARY KEY,
	adminLevel VARCHAR(255),
	password  VARCHAR(255),
	email VARCHAR(255),
	FOREIGN KEY (UUID) references Usr(UUID)
		ON DELETE CASCADE
);

CREATE TABLE Course (
	UUID INT PRIMARY KEY,
	text LONGTEXT,
	length INT,
	name VARCHAR(255) NOT NULL,
	requirementName VARCHAR(255),
	creatorUUID INT,
	UNIQUE (name),
	FOREIGN KEY (requirementName) REFERENCES Equipment(name)
		ON DELETE SET NULL,
	FOREIGN KEY (creatorUUID) REFERENCES Administrator(UUID)
		ON DELETE SET NULL
);

CREATE TABLE Tag(
	name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE Recipe (
	UUID INT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	text LONGTEXT NOT NULL,
	averageScore FLOAT,
	estimatedTime FLOAT,
	uploaderUUID INT,
	FOREIGN KEY (uploaderUUID) REFERENCES Usr(UUID)
		ON DELETE SET NULL
);
--
-- CREATE TABLE Picture (
-- 	recipeUUID INT,
-- 	pictureTitle VARCHAR(255),
-- 	userUUID INT,
-- 	filepath VARCHAR(255) NOT NULL,
-- 	PRIMARY KEY(recipeUUID, userUUID, pictureTitle),
-- 	FOREIGN KEY (recipeUUID) REFERENCES Recipe(UUID)
-- 		ON DELETE CASCADE,
-- 	FOREIGN KEY (userUUID) REFERENCES Users(UUID)
-- 		ON DELETE CASCADE
-- );

CREATE TABLE Comment (
	recipeUUID INT,
	commentNumber INT,
	text VARCHAR(1000) NOT NULL,
	authorUUID INT,
	PRIMARY KEY (recipeUUID, commentNumber),
	FOREIGN KEY (recipeUUID) REFERENCES Recipe(UUID)
		ON DELETE CASCADE,
	FOREIGN KEY (authorUUID) REFERENCES Usr(UUID)
		ON DELETE SET NULL
);

CREATE TABLE Ingredient(
	name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE Message (
    UUID INT PRIMARY KEY,
    text VARCHAR(1000) NOT NULL,
    senderUUID INT,
    sentTime DATETIME NOT NULL,
    receiverUUID INT,
    UNIQUE (senderUUID,receiverUUID,sentTime),
    FOREIGN KEY (senderUUID) REFERENCES Usr(UUID)
		ON DELETE CASCADE,
    FOREIGN KEY (receiverUUID) REFERENCES Usr(UUID)
		ON DELETE CASCADE
);

CREATE TABLE RecipeHasTag (
    UUID INT,
    name VARCHAR(255) ,
    PRIMARY KEY (UUID,name),

    FOREIGN KEY (UUID) REFERENCES Recipe(UUID)
		ON DELETE CASCADE,
    FOREIGN KEY (name) REFERENCES Tag(name)
		ON DELETE CASCADE
);

CREATE TABLE RecipeHasIngredient (
    UUID INT,
    name VARCHAR(255) ,
    PRIMARY KEY (UUID,name),

    FOREIGN KEY (UUID) REFERENCES Recipe(UUID)
		ON DELETE CASCADE,
    FOREIGN KEY (name) REFERENCES Ingredient(name)
		ON DELETE CASCADE
);

CREATE TABLE RecipeHasEquipment (
    UUID INT,
    name VARCHAR(255) ,
    PRIMARY KEY (UUID,name),

    FOREIGN KEY (UUID) REFERENCES Recipe(UUID)
		ON DELETE CASCADE,
    FOREIGN KEY (name) REFERENCES Equipment(name)
		ON DELETE CASCADE
);

CREATE TABLE RecipeHasTechnique (
    UUID INT,
    name VARCHAR(255) ,
    PRIMARY KEY (UUID,name),

    FOREIGN KEY (UUID) REFERENCES Recipe(UUID)
		ON DELETE CASCADE,
    FOREIGN KEY (name) REFERENCES Technique(name)
		ON DELETE CASCADE
);

--
CREATE TABLE UsrFavouriteRecipe (
    usrUUID INT ,
	recipeUUID INT,
    PRIMARY KEY (recipeUUID,usrUUID),
    FOREIGN KEY (recipeUUID) REFERENCES Recipe(UUID) ON DELETE CASCADE,
    FOREIGN KEY (usrUUID) REFERENCES Usr(UUID)
	ON DELETE CASCADE
);

CREATE TABLE UsrHasIngredient (
    usrUUID INT ,
	name VARCHAR(255),
	quantity INT,
    PRIMARY KEY (usrUUID,name),
    FOREIGN KEY (usrUUID) REFERENCES Usr(UUID) ON DELETE CASCADE ,
    FOREIGN KEY (name) REFERENCES Ingredient(name)  ON DELETE CASCADE

);


CREATE TABLE UsrRateRecipe (
    usrUUID INT ,
	score INT ,
	recipeUUID INT,
    PRIMARY KEY (usrUUID,recipeUUID),
    FOREIGN KEY (usrUUID) REFERENCES Usr(UUID) ON DELETE CASCADE ,
    FOREIGN KEY (recipeUUID) REFERENCES Recipe(UUID)  ON DELETE CASCADE

);
